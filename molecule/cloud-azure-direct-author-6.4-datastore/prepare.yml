---
- name: Include common prepare
  import_playbook: ../resources/provisioning/AZURE/prepare.yml

- name: Get SAS
  hosts: localhost
  gather_facts: true
  connection: local
  vars:
    az_resource_group_name: epm-ldi
    az_storage_account_name: storage11490
    az_container_name: oracle-java
    java_download_path: /tmp
    az_file_name: jdk-8u212-linux-x64.tar.gz
  tasks:
    - name: Set expiration period
      set_fact:
        sas_time_start: '{{ ansible_date_time.iso8601_micro }}'
        sas_time_expire: >-
          {{ ('%Y-%m-%dT%H:%M:%S'
            | strftime(ansible_date_time.epoch|int + 60))
            ~ (ansible_date_time.iso8601_micro | splitext)[1] }}
    - name: Get blob SAS URL
      azure_rm_resource:
        resource_group: '{{ az_resource_group_name }}'
        method: POST
        url: "/subscriptions/{{ lookup('env','AZURE_SUBSCRIPTION_ID') }}\
              /resourceGroups/{{ az_resource_group_name }}/providers/\
              Microsoft.Storage/storageAccounts/\
              {{ az_storage_account_name }}/ListServiceSas/"
        body:
          canonicalizedResource: '/blob/{{ az_storage_account_name }}/{{ az_container_name }}/{{ az_file_name }}'
          signedResource: b
          signedPermission: r
          signedStart: '{{ sas_time_start }}'
          signedExpiry: '{{ sas_time_expire }}'
      register: storage_sig
      changed_when: false

- name: Prepare temporary blob storage for molecule test
  hosts: aem_authors
  tasks:
    - block:
        - name: Install EPEL repo
          yum:
            name: 'https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm'
            state: present
          when: ansible_os_family == 'RedHat'
        - name: Add universe repository for Ubuntu
          apt_repository:
            repo: 'deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe'
            state: present
          when: ansible_distribution == 'Ubuntu'
        - name: Install python
          package:
            name: "{{ (ansible_os_family == 'Debian') | ternary('python3-pip', 'python-pip') }}"
        - name: install ansible azure
          pip:
            name: ansible[azure]
            executable: "{{ (ansible_os_family == 'Debian') | ternary('pip3', 'pip') }}"
        - name: create azure blob container
          azure_rm_storageblob:
            resource_group: epm-ldi
            storage_account_name: storage11490
            container: "epm-ldi-aem-{{ lookup('env','CI_JOB_ID') }}-{{ ansible_distribution | lower }}-\
              {{ ansible_distribution_major_version }}"
            subscription_id: "{{ lookup('env','AZURE_SUBSCRIPTION_ID') }}"
            client_id: "{{ lookup('env','AZURE_CLIENT_ID') }}"
            secret: "{{ lookup('env','AZURE_SECRET') }}"
            tenant: "{{ lookup('env','AZURE_TENANT') }}"
      become: true

- name: Install java
  hosts: aem_authors
  roles:
    - role: lean_delivery.java
      java_distribution: oracle_java
      java_major_version: 8
      transport: web
      transport_web: "https://storage11490.blob.core.windows.net/oracle-java/\
        jdk-8u212-linux-x64.tar.gz?{{ hostvars['localhost']['storage_sig']['response']['serviceSasToken'] }}"

- name: Prepare certificates
  hosts: aem_authors
  become: true
  roles:
    - role: jdauphant.ssl-certs
      ssl_certs_common_name: localhost
      ssl_certs_cert_path: "/etc/ssl/{{ ssl_certs_common_name }}/{{ ssl_certs_common_name }}.crt"
      ssl_certs_path_owner: "root"
      ssl_certs_path_group: "root"
