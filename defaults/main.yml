---
# file: defaults/main.yml

## AEM SECTION ###

# AEM version (6.3, 6.4, 6.5)
aem_version: '6.4'

# List of additional AEM Packages to install
aem_packages: []

#list of publishers for replication agents configuration
publishers: []
#list of dispatchers for flush agents configuration
dispatchers: []

# INFO: AEM Run mode by default: <aem_instance_type - e.g. "author">,<env type - e.g. "dev">
publisher_ssl: false
dispatcher_ssl: false
dispatcher_https_port: 443
dispatcher_http_port: 80

#server link to download
web_transport_common_url: 'ftp://ftp:ftp@ftp.com/aem'
full_aem_web_transport_link: '{{ web_transport_common_url }}/{{ aem_version }}/aem.jar'
full_license_web_transport_link: '{{ web_transport_common_url }}/licenses/{{ aem_version }}/license.properties'

# web or s3 or azure
download_transport: web

transport_s3_bucket: aemartifacts
aem_transport_s3_path: '/{{ aem_version }}/aem.jar'
jolokia_transport_s3_path: '/jolokia-jvm-1.6.2-agent.jar'
license_transport_s3_path: '/licenses/{{ aem_version }}/license.properties'
transport_s3_aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
transport_s3_aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"

transport_azure_resource_group: ''
transport_azure_storage_account_name: ''
transport_azure_container: ''
aem_transport_azure_path: '{{ aem_version }}/aem.jar'
license_transport_azure_path: 'licenses/{{ aem_version }}/license.properties'
transport_azure_subscription_id: "{{ lookup('env','AZURE_SUBSCRIPTION_ID') }}"
transport_azure_client_id: "{{ lookup('env','AZURE_CLIENT_ID') }}"
transport_azure_client_secret: "{{ lookup('env','AZURE_SECRET') }}"
transport_azure_tenant_id: "{{ lookup('env','AZURE_TENANT') }}"

aem_instance_type: 'author'

# Comma separated custom run modes
aem_custom_modes: ''

# Default AEM root path
aem_root: /opt/aem

aem_instance_port: 4502

aem_admin_login: admin
aem_admin_password: admin
environment_type: dev_test

#variables for  ssl activation
aem_ssl_enable: false
aem_instance_ssl_port: 8443
aem_ssl_dir: '{{aem_root}}/ssl'
keystore_password: qwe123
truststore_password: qwe123
aem_ssl_hostname: localhost
ssl_key_full_path: '{{ aem_ssl_dir }}/{{ aem_ssl_hostname }}.key'
ssl_crt_full_path: '{{ aem_ssl_dir }}/{{ aem_ssl_hostname }}.crt'
ssl_der_full_path: '{{ aem_ssl_dir }}/{{ aem_ssl_hostname }}.der'

# Linux username and group which operates AEM
aem_user: aem
aem_group: aem

# And their UID
aem_user_id: 99999
aem_group_id: 19999

# Do you want to change default admin password?
aem_change_default_admin_password: false

# AEM groups which would be created during provision proccess
# aem_groups:
#   -
#     # AEM Group authorizableID
#     id: 'test_group'
#     # AEM Group Name
#     name: 'Test group'
#     # AEM Group description
#     description: 'All test users'
#     # AEM Group permissions
#     permissions:
#       - 'path:/,read:true'
#       - 'path:/etc/packages,read:true,modify:true,create:true,delete:false,replicate:true'
#     # AEM Group parent group
#     root_group: 'everyone'
#   }
aem_groups: []

# AEM users which would be created during provision proccess
## Don't forget to create user for Jenkins and add it into 'Administrators' build-in AEM group
# aem_users:
#   -
#     # AEM user path in crx
#     category: 'test'
#     # User ID
#     id: 'test_user'
#     # AEM Group description
#     first_name: 'Test'
#     # AEM Group permissions
#     second_name: 'User'
#     # AEM User password
#     password: 'test_user_password'
#     # AEM user primary group
#     'group' : 'everyone'
aem_users: []
aem_garbage_collector: 'UseG1GC'

# UseParallelGC , UseSerialGC
aem_perm_size: '512m'
replication_enabled: false
Xms_size: '{{ (ansible_memtotal_mb * 0.7) |int|abs }}'
Xmx_size: '{{ (ansible_memtotal_mb * 0.7) |int|abs }}'

# AEM Home Dir: aem_root = /opt/aem/author(publish)
aem_home: '{{ aem_root }}/{{ aem_instance_type }}'
# AEM service name
aem_service_name: 'aem-{{ aem_instance_type }}'
# Destination file name
cq_file_name: 'cq-{{ aem_instance_type }}-p{{ aem_instance_port }}'
# AEM REST Link
aem_rest_link: 'http://localhost:{{ aem_instance_port }}'
aem_file: '/opt/{{ aem_service_name }}.done'
tasks_path: '{{ role_path }}/tasks'
aem_load_handler:
  -
    path: 'damadmin'
    content: 'Assets'
  -
    path: 'miscadmin'
    content: 'Tools'
  -
    path: 'system/console/bundles'
    content: 'Experience'

pip_executable: '{{ default_pip_executable }}'
python_executable: '{{ default_python_executable }}'
jolokia_agent_url: https://search.maven.org/remotecontent?filepath=org/jolokia/jolokia-jvm/1.6.2/jolokia-jvm-1.6.2-agent.jar
jolokia_agent_port_publisher: 9999
jolokia_agent_port_author: 9998

tmpdir: /tmp

#############################
### Configure data stores
#############################
## Configure default File data store
# When using a NAS to store shared file data stores, we provide possibility to customize configuration options
file_datastore_customize: false

## Configure Cloud data stores
# Supported types are: s3, azure.
# Amazon S3 Data Store
# https://docs.adobe.com/content/help/en/experience-manager-65/deploying/deploying/data-store-config.html#amazon-s-data-store
# Azure Data Store
# https://docs.adobe.com/content/help/en/experience-manager-65/deploying/deploying/data-store-config.html#azure-data-store
cloud_datastore_type: ''

# To use TarMK with the S3/Azure Datastore, we need to start AEM using the crx3tar-nofds runmode
cloud_datastore_runmode: crx3tar-nofds

# Link to download AEM feature pack. There are default values in "vars/data_sore/{{ cloud_specific }}_vars.yml"
# Can be redefined if needed
adobe_repo_feature_pack_link: ''
# Default Link to download AEM feature pack md5 file. Can be redefined if needed
adobe_repo_feature_pack_md5_link: '{{ adobe_repo_feature_pack_link }}.md5'

# Directory to install feature pack in it
aem_install_dir: '{{ aem_home }}/crx-quickstart/install'

# AEM PID to configure any external data store. There are default values in "vars/data_sore/{{ cloud_specific }}_vars.yml"
datastore_pid_file: ''
