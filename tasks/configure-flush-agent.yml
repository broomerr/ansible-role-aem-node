---
# file: tasks/configure-replication.yml

- name: Set dispatcher_port when dispatcher_ssl is true
  set_fact:
    dispatcher_port: '{{ dispatcher_https_port }}'
    dispatcher_protocol: https
  when: dispatcher_ssl

- name: Set dispatcher_port when dispatcher_ssl is false
  set_fact:
    dispatcher_port: '{{ dispatcher_http_port }}'
    dispatcher_protocol: http
  when: not dispatcher_ssl

- name: Create/update dispatcher flush  agents on author host
  aem_agent:
    name: "{{ hostvars[host]['inventory_hostname']|replace('.','-')|lower() }}-dispatcher"
    state: disabled
    title: 'replication agent for publish instance'
    folder: 'agents.{{ aem_instance_type }}'
    transport_uri: "{{ dispatcher_protocol }}://{{ hostvars[host]['inventory_hostname'] }}:\
                    {{ dispatcher_port }}/dispatcher/invalidate.cache"
    transport_user: '{{ aem_admin_login }}'
    transport_password: '{{ aem_admin_password }}'
    log_level: error
    triggers: 'on_receive,no_versioning'
    serialization_type: flush
    description: "Dispatcher flush agent for {{ hostvars[host]['inventory_hostname']  }} node (flush type)"
    admin_user: '{{ aem_admin_login }}'
    admin_password: '{{ aem_admin_password }}'
    retry_delay: 60000
    host: 'http://localhost'
    port: '{{ aem_instance_port }}'
  when: aem_instance_type == 'author'

- name: Create/update dispatcher flush  agents for on publisher host
  aem_agent:
    name: "{{ hostvars[host]['inventory_hostname']|replace('.','-')|lower() }}-dispatcher"
    state: enabled
    title: 'replication agent for publish instance'
    folder: 'agents.{{ aem_instance_type }}'
    transport_uri: "{{ dispatcher_protocol }}://{{ hostvars[host]['inventory_hostname'] }}:\
                    {{ dispatcher_port }}/dispatcher/invalidate.cache"
    transport_user: '{{ aem_admin_login }}'
    transport_password: '{{ aem_admin_password }}'
    log_level: error
    triggers: 'on_receive,no_versioning'
    serialization_type: flush
    description: "Dispatcher flush agent for {{ hostvars[host]['inventory_hostname']  }} node (flush type)"
    admin_user: '{{ aem_admin_login }}'
    admin_password: '{{ aem_admin_password }}'
    retry_delay: 60000
    host: 'http://localhost'
    port: '{{ aem_instance_port }}'
  when: aem_instance_type == 'publish'
