---
# file: tasks/configure-replication.yml

- name: "check if an agent for {{ hostvars[host]['inventory_hostname'] }} host created"
  uri:
    url: "{{ aem_rest_link }}/etc/replication/agents.{{ aem_instance_type }}/{{ hostvars[host]['inventory_hostname']|replace('.','-')|lower() }}.html"
    method: GET
    user: '{{ aem_admin_login }}'
    password: '{{ aem_admin_password }}'
    force_basic_auth: True
    status_code: 200, 404, -1
  register: checkRequest

- name: "create agent for {{ hostvars[host]['inventory_hostname'] }} if dont exist"
  uri:
    url: "{{ aem_rest_link }}/bin/wcmcommand"
    method: POST
    user: '{{ aem_admin_login }}'
    password: '{{ aem_admin_password }}'
    force_basic_auth: True
    body: "cmd=createPage&charset=UTF-8&parentPath=/etc/replication/agents.{{ aem_instance_type }}&label={{ hostvars[host]['inventory_hostname']|replace('.','-')|lower() }}&title={{ hostvars[host]['inventory_hostname']|replace('.','-')|lower() }}&template=/libs/cq/replication/templates/agent"
  register: agentCreate
  until: (agentCreate is succeeded)
  retries: 100
  delay: 5
  when: checkRequest.status == 404

- name: prepare to rewrite base_agent_body if webServerSSL is true
  set_fact:
    webServerPort: "{{ hostvars[host]['webServerHTTPsPort'] }}"
  when: hostvars[host]['webServerSSL']

- name: prepare to rewrite base_agent_body if webServerSSL is false
  set_fact:
    webServerPort: "{{ hostvars[host]['webServerHTTPPort'] }}"
  when: not hostvars[host]['webServerSSL']

- name: rewrite base_agent_body
  set_fact:
    base_agent_body: "{{ base_agent_body }}&transportUri=http://{{ hostvars[host]['inventory_hostname'] }}:{{ webServerPort }}/dispatcher/invalidate.cache&retryDelay=60000&logLevel=error&serializationType=flush&jcr:description=Dispatcher flush agent for {{ hostvars[host]['inventory_hostname'] }} node (flush type)"

- name: set agent body for author instance
  set_fact:
    agent_body: "{{ base_agent_body }}&enabled=false"
  when: aem_instance_type == 'author'

- name: set agent body for publish instance
  set_fact:
    agent_body: "{{ base_agent_body }}&enabled=true"
  when: aem_instance_type == 'publish'

- name: "check {{ hostvars[host]['inventory_hostname'] }} agent configuration"
  uri:
    url: "{{ aem_rest_link }}/etc/replication/agents.{{ aem_instance_type }}/{{ hostvars[host]['inventory_hostname']|replace('.','-')|lower() }}/jcr:content"
    method: POST
    user: '{{ aem_admin_login }}'
    password: '{{ aem_admin_password }}'
    force_basic_auth: True
    body: '{{ agent_body }}'
  register: agentConfigure
  until: (agentConfigure is succeeded)
  retries: 100
  delay: 5
