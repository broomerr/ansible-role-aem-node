# file: roles/aem_instance/handlers/main.yml

- name: stop aem
  service:
    name: '{{ aem_service_name }}'
    state: stopped
    daemon_reload: True
  notify:
  - wait while stopping

- name: wait while stopping
  shell: "ps -u {{ aem_user }} | grep java -c"
  ignore_errors: True
  register: service_aem_status
  until: service_aem_status.stdout.find("0") != -1
  retries: 50
  delay: 10

- name: start aem
  service:
    name: '{{ aem_service_name }}'
    enabled: True
    state: started

- name: firstload aem
  uri:
    url: '{{ aem_rest_link }}/{{ item.path }}'
    user: '{{ aem_admin_login }}'
    password: '{{ aem_admin_password }}'
    force_basic_auth: True
    method: GET
    return_content: True
    status_code: 200
  register: aemLoad
  until: (item.content in aemLoad.content)
  retries: 100
  delay: 120
  with_items: '{{ aem_load_handler }}'

- name: wait 5 minutes
  pause:
    minutes: 5

- name: load aem
  uri:
    url: '{{ aem_rest_link }}/{{ item.path }}'
    user: '{{ aem_admin_login }}'
    password: '{{ aem_admin_password }}'
    force_basic_auth: True
    method: GET
    return_content: True
    status_code: 200
  register: aemLoad
  until: (item.content in aemLoad.content)
  retries: 100
  delay: 60
  with_items: '{{ aem_load_handler }}'
